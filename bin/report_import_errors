#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../config/environment'
require 'slop'
require 'csv'

def main(opts = {})
  check_required_params(opts)

  # Find importer object
  importer_id = opts[:importer_id]
  begin
    importer = Bulkrax::Importer.find(importer_id)
  rescue ActiveRecord::RecordNotFound
    puts "No importer found for ID " + importer_id.to_s
    exit
  end

  csv_headers = [ "status_message", "entry_id", "type", "source_identifier", "error_class", "error_messsage", "error_backtrace" ]
  entry_list = [] 

  importer.entries.each do |entry|
    # Get current status for entry
    entry_current_status = entry.current_status

    # Report on any entries where status message is not "Complete"
    if entry_current_status.status_message.to_s != "Complete" then

      # Start a new row with  status message
      entry_csv = [ entry_current_status.status_message ]
      
      # Entry ID
      entry_csv.append(entry.id.to_s)
      
      # Work type
      entry_csv.append(entry.factory_class.to_s)

      # Source identifier
      entry_csv.append(entry.source_identifier.to_s)

      # Add error class, message, and backtrace
      entry_csv.append(entry_current_status.error_class.to_s)
      entry_csv.append(entry_current_status.error_message.to_s)
      entry_csv.append(entry_current_status.error_backtrace.to_s)

     # Add row to list
     entry_list.append(entry_csv)
    end

  end

  # Prepend CSV column headers
  entry_list.prepend(csv_headers)

  # Generate CSV output
  csv_output = CSV.generate { |csv| entry_list.each { |row| csv << row } }

  # Dump to stdout
  puts csv_output

end

def check_required_params(opts)
  if opts[:importer_id].blank? ## && invalid?(opts)
    puts 'Missing required parameters'
    help
  end
end

# Format the help for the CLI
def help
  puts "Report errors for any entries that failed during a Bulkrax importer run."
  puts "bin/report_import_errors --importer_id 1\n\n"
  exit
end

options = Slop.parse do |o|
  o.on '--help', 'Print help' do
    help
    exit
  end

  o.integer '--importer_id', 'Bulkrax importer ID'
end

main(options.to_hash)
